sudo: required

jobs:
  include:
    - stage: Root build and sonar 
      language: java
      jdk: openjdk11
      addons:
        sonarcloud:
          organization: "unige-pinfo-2019" 
      script:
        - mvn clean package
        - mvn sonar:sonar -Dsonar.projectKey=unige-pinfo-2019_PInfo2 -Dsonar.organization=unige-pinfo-2019 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=6a52b61ec8bac75693325785b5dd8214362acae7

    - stage: Ad Service
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd ad-service
      script:
        - mvn clean package
        - mvn install -Ppackage-docker-image 
      after_success:
        - docker login -u "$DOCKER_ID_USER" -p "$DOCKER_PASSWORD"
        - docker tag unige/ad-service $DOCKER_ID_USER/ad-service

    - stage: Search Service 
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd search-service
      script:
        - mvn clean package
        - mvn install -Ppackage-docker-image 
      after_success:
        - docker login -u "$DOCKER_ID_USER" -p "$DOCKER_PASSWORD"
        - docker tag unige/search-service $DOCKER_ID_USER/search-service
        - docker push $DOCKER_ID_USER/search-service

    - stage: Category Service 
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd category-service
      script:
        - mvn clean package
        - mvn install -Ppackage-docker-image 
      after_success:
        - docker login -u "$DOCKER_ID_USER" -p "$DOCKER_PASSWORD"
        - docker tag unige/category-service $DOCKER_ID_USER/category-service
        - docker push $DOCKER_ID_USER/category-service

    - stage: User Service 
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd user-service
      script:
        - mvn clean package
        - mvn install -Ppackage-docker-image 
      after_success:
        - docker login -u "$DOCKER_ID_USER" -p "$DOCKER_PASSWORD"
        - docker tag unige/user-service $DOCKER_ID_USER/user-service
        - docker push $DOCKER_ID_USER/user-service

    - stage: Image Service 
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd image-service
      script:
        - mvn clean package
        - mvn install -Ppackage-docker-image 
      after_success:
        - docker login -u "$DOCKER_ID_USER" -p "$DOCKER_PASSWORD"
        - docker tag unige/image-service $DOCKER_ID_USER/image-service
        - docker push $DOCKER_ID_USER/image-service

    - stage: Api Gateway 
      language: minimal
      services:
        - docker
      before_script:
        - cd api-gateway
      script:
        - mvn clean package
        - mvn install -Ppackage-docker-image 
      after_success:
        - docker login -u "$DOCKER_ID_USER" -p "$DOCKER_PASSWORD"
        - docker tag unige/api-gateway $DOCKER_ID_USER/api-gateway
        - docker push $DOCKER_ID_USER/api-gateway




